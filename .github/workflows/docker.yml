name: Deploy to Web Server

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use an Ubuntu runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: TalkeysOfficial/talkeys

      - name: Install SSH client
        run: |
          sudo apt-get update
          sudo apt-get install openssh-client -y

      - name: Create SSH directory
        run: mkdir -p ~/.ssh

      - name: Write SSH key to file
        run: echo "${{ secrets.TALKEYS_KEYS }}" > ~/.ssh/id_rsa
        shell: bash

      - name: Set permissions for the SSH key
        run: chmod 600 ~/.ssh/id_rsa
        shell: bash

      - name: Add SSH key to ssh-agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
        shell: bash

      - name: SSH into server and deploy
        run: |
          ssh -o StrictHostKeyChecking=no shrem@34.131.247.65 'cd /home/shreyas/talkeys/ && sudo git pull https://ShreyasMahajann:${{ secrets.GIT_SSH }}@github.com/TalkeysOfficial/talkeys'
          echo "Allowing Go Fiber Program to start properly"
          echo "Entering into sleep for 10 seconds.. Kindly wait..."
          sleep 10

      - name: Check and free port 4890
        run: |
          if lsof -Pi :4890 -sTCP:LISTEN -t >/dev/null ; then
            echo "Port 4890 is in use. Stopping the service."
            fuser -k 4890/tcp
          fi

      - name: Check API Status with Retry
        run: |
          for i in {1..3}; do
            RESPONSE=$(curl --write-out "%{http_code}" --silent --output /dev/null https://api.talkeys.xyz/getEvents)
            if [ "$RESPONSE" -eq 200 ]; then
              echo "API is up and running!"
              exit 0
            else
              echo "API returned status code $RESPONSE, retrying in 10 seconds..."
              sleep 10
            fi
          done
          echo "API failed to start after multiple attempts"
          exit 1

      - name: Clean Up Docker
        run: |
          echo y | docker system prune

      - name: Clone the repository to a temp directory
        run: |
          git clone https://ShreyasMahajann:${{ secrets.GIT_SSH }}@github.com/TalkeysOfficial/talkeys.git temp_repo
          cd temp_repo
          rm -rf .github/workflows  # Remove workflow files
          git config --global user.email "himanishpuri2203@gmail.com"
          git config --global user.name "himanishpuri"
          git remote add backup https://himanishpuri:${{ secrets.HIMAISH_REPO }}@github.com/himanishpuri/talkeyz.git
          git branch -M himanish
          git add .  # Stage changes (important for removed files)
          git commit -m "Overriding with latest changes from talkeys repo"
          git push --force backup himanish
